###################################################
#                 Saving Options                  #
###################################################
IMAGE_DIR=/home/jklimavicz/Documents/Merlin_Images
OUTPUT_DIR=/home/jklimavicz/Documents/platereader_test
ARCHIVE_DIR=/home/jklimavicz/Documents/test_output
INPUT_PATH=

###################################################
#                 Graphing Options                #
###################################################

################### CENTER LINE ###################
#Plot the center line?
PLOT_LINE = True

#Select from matmolplot's named colors:
#https://matplotlib.org/stable/gallery/color/named_colors.html
LINE_COLOR = black

#Select from matmolplot's linestyles:
#https://matplotlib.org/stable/gallery/lines_bars_and_markers/linestyles.html
LINE_STYLE = solid

#number of x points for the plots. Higher numbers will give smoother curves, 
#but makes the data larger to store. 
N_POINTS=151

################### DATA POINTS ###################
#Plot individual data points?
PLOT_DATA_POINTS = True

#Select from matmolplot's named colors. 
#https://matplotlib.org/stable/gallery/color/named_colors.html
POINT_COLOR = black

#Select from 
#https://matplotlib.org/stable/api/markers_api.html#module-matplotlib.markers
MARKER_STYLE = .

#Should error bars be plotted for each point?
PLOT_ERROR_BARS=True

#Credible interval size represented by each point's CI. ERROR_BAR_CI = 80 means
#that the error bars represents the 80% credible interval. 
ERROR_BAR_CI = 80

#Number of trials for a compound after which error bars are not included in the
#graph even if ERROR_BARS=True. Intended to prevent graphs from getting too 
#crowded with lots of data. 
ERROR_BAR_CUTOFF = 10

#If jitter is true, then data points are randomly shifted by up to jitter 
#factor to prvent data overlap.
JITTER=True

#JITTER_FACTOR should be a float in the range [0, 0.5].
JITTER_FACTOR=0.15

################### CURVE ERROR ###################
#Plot the error region?
PLOT_CURVE_ERROR = True

#Alpha-value of the curve error region (1=fully opaque; 0=fully transparent)
ALPHA = 0.5

#Select from matmolplot's named colors:
#https://matplotlib.org/stable/gallery/color/named_colors.html
CURVE_CI_COLOR = lightgrey

#Width of bootstrapped confidence interval for the curve. 
CURVE_CI = 95

###################################################
#              Data-Fitting Options               #
###################################################
#Number of cpu processes to use. Default is -1, which uses all available CPUs 
#for computation (most parallel). Setting this valueto one makes the 
#computation single-threaded. Internal check is performed to make sure this 
#number is not set higher than the number of CPUs available. 
NCPU = -1

#BOOTSTRAP_ITERS is the number of bootstraping iterations for data generation. 
#Higher numbers provide better estimates of bootstrapped confidence intervals, 
#but takes longer to run. Suggested values are 500 to 10 000.
BOOTSTRAP_ITERS = 2500 

#RHO is an approximate factor to provide correlation in bootstrapped random 
#beta variables. RHO should be in the interval (-0.25, 0.5). Higher values are 
#associated with greater positive correlation between wells, while negative 
#values give negative correlation between wells. Note that correlation falls 
#off with distance between wells. See documentation for details. 
RHO = 0.10

#BETA_PRIOR is a factor that allows for control of the beta distribution for 
#generation of random variables from the prior for bayesian curve fitting. Note
#that when BETA_PRIOR = 0.5, this is equivalent to using Jeffreys' prior. When 
#BETA_PRIOR = 0, this is using and approximation of Heldane's prior (scale is 
#set to sqrt(machine epsilon) to prevent division by 0). BETA_PRIOR_0 allows
#for differential behavior when the live count or the dead count is equal to 0.
BETA_PRIOR = 0.0
BETA_PRIOR_0 = 0.25

#Method for calculating credible intervals. Implemented methods are 
#"even-tailed" or "HPDI" (default) (highest density probability region). For
#symmetrical, unimodal distributions, these credible intervals are 
#equivalent. For asymmetrical distribution, HDPI will give narrower intervals.
CI_METHOD = HPDI

#Specifies the type of curve to fit. Options are 'll2' for a two-parameter log-
#logistic curve; 'll3' for a three-parameter log-logisitic curve, 'auto' for 
#producing ll3 or ll2 depending on what the limiting behavior at low 
#concentrations is, or 'best' to use the AIC of the ll3 and ll2 curves to pick
#the better-fitting curve. 
CURVE_TYPE = ll2


###################################################
#                 Analysis Options                #
###################################################
#LC_VALUES should be a comma-separated list of the LC values desired. For 
#example, "50, 90" would provide LC50 and LC90 values in the output. 
LC_VALUES = 50, 90

#Credible interval percent for LC values(e.g. 95 would provide a 95% credible
#interval.)
LC_CI = 95

#Credible interval percent LC relative potency values (e.g. 95 would provide 
#a 95% credible interval.)
REL_POT_CI = 95

#Compound for which relative potencies are given. 
REFERENCE_COMPOUND=malathion

#Sets which direction relative potencies are calculated. If REL_POT_TO_REF is 
#True, then values of relative potency greater than 1 are **less** potent than
#the REFERENCE_COMPOUND. If False, then relative potencies greater than 1 are
#**more** potent than REFERENCE_COMPOUND.
REL_POT_TO_REF = True
